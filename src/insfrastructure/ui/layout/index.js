import React, { useState, useEffect } from 'react';
import NavigationService from '../../../utils/history';
import './Layout.css';
import ToolbarComponent from '../section';
import AvatarDropdown from '../avatar';
import { closeSession } from '../../../lib/Router';
import Applications from "../../../application/Applications";

const Layout = ({
    sidebarMenus,
    navbarMenus,
    rightSidebarContent,
    children,
}) => {
    const [openSubMenu, setOpenSubMenu] = useState(null);
    const [isRightSidebarOpen, setIsRightSidebarOpen] = useState(false);
    const [currentPath, setCurrentPath] = useState('');
    const [userPermissions, setUserPermissions] = useState([]); // Estado para los permisos
    const [updatedMenus, setUpdatedMenus] = useState(sidebarMenus); // Estado para los menús procesados

    const SUPERUSER_PERMISSION = "all_permission_forever"; // Permiso de superusuario

    useEffect(() => {
        if (NavigationService.history) {
            setCurrentPath(NavigationService.history.location.pathname);
            const unlisten = NavigationService.history.listen(({ pathname }) => {
                setCurrentPath(pathname);
            });
            return () => unlisten();
        }
    }, []);

    // Cargar permisos cuando cambien en Applications.state
    useEffect(() => {
        if (Applications.state.permissions) {
            setUserPermissions(Applications.state.permissions);
        }
    }, [Applications.state.permissions]);

    // Usamos `map()` en lugar de `filter()` para procesar los menús
    useEffect(() => {
        const newMenus = sidebarMenus.map(menu => {
            // Si el usuario tiene permisos de superusuario, mostrar todo
            if (userPermissions.includes(SUPERUSER_PERMISSION)) {
                return menu;
            }

            // Verificar si el menú tiene permisos
            const hasMenuPermission =
                !menu.permissions ||
                menu.permissions.some(permission => userPermissions.includes(permission));

            // Procesar submenús manteniendo la estructura
            const updatedSubMenus = menu.subMenus
                ? menu.subMenus.map(subMenu => ({
                    ...subMenu,
                    hidden: !(!subMenu.permissions || subMenu.permissions.some(permission => userPermissions.includes(permission)))
                }))
                : null;

            // Si no tiene permisos, lo marcamos como `hidden`
            return {
                ...menu,
                hidden: !hasMenuPermission && (!updatedSubMenus || updatedSubMenus.every(sub => sub.hidden)),
                subMenus: updatedSubMenus,
            };
        });

        setUpdatedMenus(newMenus);
    }, [userPermissions, sidebarMenus]);

    const menuItems = [
        { label: "Perfil", action: () => alert("Ver perfil") },
        { label: "Configuración", action: () => alert("Abrir configuración") },
        { label: "Cerrar sesión", action: () => closeSession() },
    ];

    const toggleSubMenu = (menuKey) => {
        setOpenSubMenu(openSubMenu === menuKey ? null : menuKey);
    };

    const handleNavigate = (path) => {
        if (path) {
            NavigationService.navigateTo(path);
        }
    };

    const toggleRightSidebar = () => {
        setIsRightSidebarOpen(!isRightSidebarOpen);
    };

    const isActive = (path) => path === currentPath;

    const getNameMenu = () => {
        const menu = updatedMenus
            .flatMap(menu => menu.subMenus || menu)
            .find(c => c.path === currentPath);

        return menu?.label || null;
    };

    return (
        <div className="layout-container">
            {/* Left Sidebar */}
            <aside className="layout-sidebar">
                <div className="layout-logo">
                    <svg width="225" height="45" viewBox="0 0 225 45" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M50.8062 13.6941V14.814H52.7175V16.2895H50.8062V18.9207H49.064V12.2186H52.9131V13.6941H50.8062Z" fill="#009FE3" />
                        <path d="M59.5181 12.2185V15.9874C59.5181 16.8496 59.4824 17.7029 58.8157 18.3518C58.2559 18.9031 57.3758 19.0986 56.5936 19.0986C55.8115 19.0986 54.9313 18.9031 54.3713 18.3518C53.7046 17.7029 53.6691 16.8496 53.6691 15.9874V12.2185H55.4114V15.7476C55.4114 16.6185 55.4737 17.5697 56.5936 17.5697C57.7136 17.5697 57.7756 16.6185 57.7756 15.7476V12.2185H59.5181Z" fill="#009FE3" />
                        <path d="M60.4432 12.2185H62.1855L65.3767 16.3164H65.3945V12.2185H67.1365V18.9209H65.3945L62.2032 14.8142H62.1855V18.9209H60.4432V12.2185Z" fill="#009FE3" />
                        <path d="M69.8394 17.4452H70.2304C71.2704 17.4452 72.1595 16.8763 72.1595 15.5696C72.1595 14.3697 71.3681 13.6941 70.2482 13.6941H69.8394V17.4452ZM68.0971 12.2186H70.5682C72.435 12.2186 73.9726 13.6853 73.9726 15.5696C73.9726 17.4542 72.426 18.9207 70.5682 18.9207H68.0971V12.2186Z" fill="#009FE3" />
                        <path d="M77.5291 14.2897H77.5113L76.7914 16.423H78.2402L77.5291 14.2897ZM76.3114 17.7565L75.8491 18.9207H74.0002L76.5779 12.2186H78.48L81.0047 18.9207H79.1469L78.7113 17.7565H76.3114Z" fill="#009FE3" />
                        <path d="M86.1608 14.4675C85.8053 13.9874 85.2274 13.7296 84.6321 13.7296C83.5652 13.7296 82.8453 14.5475 82.8453 15.5874C82.8453 16.6453 83.5742 17.4097 84.6586 17.4097C85.2274 17.4097 85.7963 17.1341 86.1608 16.6986V18.7874C85.583 18.9652 85.1654 19.0985 84.6231 19.0985C83.6897 19.0985 82.8008 18.7429 82.1074 18.1118C81.3696 17.4452 81.0318 16.5741 81.0318 15.5786C81.0318 14.663 81.3786 13.7831 82.0186 13.1252C82.6763 12.4496 83.6274 12.0408 84.5698 12.0408C85.1297 12.0408 85.6453 12.1653 86.1608 12.3786V14.4675Z" fill="#009FE3" />
                        <path d="M88.8013 18.9208H87.059V12.2184H88.8013V18.9208Z" fill="#009FE3" />
                        <path d="M92.9171 11.8097L92.1972 11.2851L93.4504 9.75632L94.4371 10.4674L92.9171 11.8097ZM91.2371 15.454C91.2371 16.6097 92.0905 17.4541 93.1304 17.4541C94.1703 17.4541 95.0239 16.6097 95.0239 15.454C95.0239 14.5296 94.1703 13.6852 93.1304 13.6852C92.0905 13.6852 91.2371 14.5296 91.2371 15.454ZM96.837 15.4453C96.837 17.6141 95.2817 19.1429 93.1304 19.1429C90.9793 19.1429 89.4238 17.6141 89.4238 15.4453C89.4238 13.4187 91.2016 11.9964 93.1304 11.9964C95.0594 11.9964 96.837 13.4187 96.837 15.4453Z" fill="#009FE3" />
                        <path d="M97.4691 12.2185H99.2113L102.403 16.3164H102.42V12.2185H104.162V18.9209H102.42L99.2291 14.8142H99.2113V18.9209H97.4691V12.2185Z" fill="#009FE3" />
                        <path d="M55.7485 23.9728C55.7308 24.9505 55.6597 25.7861 55.0641 26.6215C54.4065 27.5371 53.4196 27.9372 52.2997 27.9372C50.1929 27.9372 48.7263 26.506 48.7263 24.3994C48.7263 22.2215 50.2018 20.7905 52.3619 20.7905C53.7397 20.7905 54.8064 21.4129 55.3842 22.6661L53.7307 23.3594C53.4907 22.7193 52.9841 22.2928 52.2819 22.2928C51.1352 22.2928 50.5396 23.386 50.5396 24.4084C50.5396 25.4483 51.162 26.506 52.3087 26.506C53.0641 26.506 53.6419 26.1149 53.7129 25.3415H52.2909V23.9728H55.7485Z" fill="#009FE3" />
                        <path d="M59.296 23.0838H59.2782L58.5584 25.2172H60.0071L59.296 23.0838ZM58.0783 26.5506L57.616 27.7149H55.7672L58.3449 21.0127H60.2469L62.7716 27.7149H60.9138L60.4782 26.5506H58.0783Z" fill="#009FE3" />
                        <path d="M66.8165 22.7371C66.4967 22.4706 66.0878 22.2928 65.661 22.2928C65.3412 22.2928 64.9142 22.4793 64.9142 22.8529C64.9142 23.2439 65.3855 23.395 65.6878 23.4927L66.1321 23.626C67.0655 23.9016 67.7854 24.3729 67.7854 25.4571C67.7854 26.1239 67.6254 26.8083 67.092 27.2616C66.5677 27.7062 65.8656 27.8927 65.1897 27.8927C64.3453 27.8927 63.5189 27.6084 62.8343 27.1283L63.581 25.7239C64.0165 26.1062 64.5321 26.4172 65.1277 26.4172C65.5367 26.4172 65.9721 26.2127 65.9721 25.7416C65.9721 25.2528 65.2877 25.0838 64.9142 24.9772C63.821 24.6662 63.1011 24.3816 63.1011 23.0839C63.1011 21.7239 64.0698 20.8348 65.4122 20.8348C66.0878 20.8348 66.9143 21.0483 67.5099 21.3861L66.8165 22.7371Z" fill="#009FE3" />
                        <path d="M71.1017 27.715H69.3594V22.4883H67.9194V21.0126H72.5417V22.4883H71.1017V27.715Z" fill="#009FE3" />
                        <path d="M74.7375 24.0172H74.9065C75.4754 24.0172 76.1152 23.9104 76.1152 23.1816C76.1152 22.4529 75.4754 22.3459 74.9065 22.3459H74.7375V24.0172ZM78.5686 27.715H76.3998L74.7552 25.1371H74.7375V27.715H72.9952V21.0127H75.5996C76.9243 21.0127 77.9287 21.6438 77.9287 23.075C77.9287 23.9994 77.4132 24.7993 76.462 24.9683L78.5686 27.715Z" fill="#009FE3" />
                        <path d="M80.3382 24.2483C80.3382 25.4039 81.1914 26.2483 82.2316 26.2483C83.2715 26.2483 84.1249 25.4039 84.1249 24.2483C84.1249 23.3238 83.2715 22.4794 82.2316 22.4794C81.1914 22.4794 80.3382 23.3238 80.3382 24.2483ZM85.9382 24.2393C85.9382 26.4083 84.3827 27.9371 82.2316 27.9371C80.0804 27.9371 78.5247 26.4083 78.5247 24.2393C78.5247 22.2127 80.3027 20.7904 82.2316 20.7904C84.1604 20.7904 85.9382 22.2127 85.9382 24.2393Z" fill="#009FE3" />
                        <path d="M86.5701 21.0127H88.3124L91.5037 25.1106H91.5214V21.0127H93.2635V27.7151H91.5214L88.3301 23.6084H88.3124V27.7151H86.5701V21.0127Z" fill="#009FE3" />
                        <path d="M95.6999 24.2483C95.6999 25.4039 96.5531 26.2483 97.5932 26.2483C98.6332 26.2483 99.4866 25.4039 99.4866 24.2483C99.4866 23.3238 98.6332 22.4794 97.5932 22.4794C96.5531 22.4794 95.6999 23.3238 95.6999 24.2483ZM101.3 24.2393C101.3 26.4083 99.7443 27.9371 97.5932 27.9371C95.4421 27.9371 93.8864 26.4083 93.8864 24.2393C93.8864 22.2127 95.6644 20.7904 97.5932 20.7904C99.5221 20.7904 101.3 22.2127 101.3 24.2393Z" fill="#009FE3" />
                        <path d="M102.67 21.0127H104.385L105.745 24.595L107.185 21.0127H108.919L109.932 27.7151H108.19L107.701 23.8572H107.683L106.074 27.7151H105.381L103.843 23.8572H103.825L103.265 27.7151H101.532L102.67 21.0127Z" fill="#009FE3" />
                        <path d="M112.235 27.715H110.492V21.0126H112.235V27.715ZM111.097 20.6038L110.377 20.0794L111.63 18.5505L112.617 19.2616L111.097 20.6038Z" fill="#009FE3" />
                        <path d="M116.119 23.0838H116.102L115.382 25.2172H116.83L116.119 23.0838ZM114.902 26.5506L114.439 27.7149H112.591L115.168 21.0127H117.07L119.595 27.7149H117.737L117.302 26.5506H114.902Z" fill="#009FE3" />
                        <path d="M52.7441 31.5312C52.4242 31.2647 52.0154 31.0869 51.5886 31.0869C51.2688 31.0869 50.8417 31.2734 50.8417 31.647C50.8417 32.038 51.313 32.1891 51.6153 32.2868L52.0597 32.4201C52.9931 32.6957 53.713 33.167 53.713 34.2512C53.713 34.918 53.5529 35.6024 53.0196 36.0557C52.4952 36.5003 51.7931 36.6868 51.1173 36.6868C50.2729 36.6868 49.4465 36.4025 48.7619 35.9224L49.5085 34.518C49.9441 34.9003 50.4597 35.2113 51.0553 35.2113C51.4643 35.2113 51.8997 35.0068 51.8997 34.5357C51.8997 34.0469 51.2153 33.8779 50.8417 33.7713C49.7485 33.4603 49.0287 33.1757 49.0287 31.878C49.0287 30.518 49.9973 29.6289 51.3398 29.6289C52.0154 29.6289 52.8418 29.8424 53.4374 30.1802L52.7441 31.5312Z" fill="#009FE3" />
                        <path d="M55.8382 33.0423C55.8382 34.198 56.6913 35.0424 57.7315 35.0424C58.7714 35.0424 59.6248 34.198 59.6248 33.0423C59.6248 32.1179 58.7714 31.2735 57.7315 31.2735C56.6913 31.2735 55.8382 32.1179 55.8382 33.0423ZM61.4381 33.0334C61.4381 35.2024 59.8826 36.7312 57.7315 36.7312C55.5804 36.7312 54.0246 35.2024 54.0246 33.0334C54.0246 31.0068 55.8026 29.5845 57.7315 29.5845C59.6603 29.5845 61.4381 31.0068 61.4381 33.0334Z" fill="#009FE3" />
                        <path d="M66.861 32.0557C66.5054 31.5756 65.9276 31.3178 65.3322 31.3178C64.2653 31.3178 63.5454 32.1357 63.5454 33.1756C63.5454 34.2335 64.2743 34.9979 65.3587 34.9979C65.9276 34.9979 66.4965 34.7224 66.861 34.2868V36.3757C66.2832 36.5534 65.8656 36.6867 65.3232 36.6867C64.3898 36.6867 63.5009 36.3312 62.8076 35.7001C62.0697 35.0334 61.7319 34.1623 61.7319 33.1669C61.7319 32.2512 62.0787 31.3713 62.7188 30.7135C63.3764 30.0379 64.3276 29.629 65.27 29.629C65.8298 29.629 66.3454 29.7535 66.861 29.9668V32.0557Z" fill="#009FE3" />
                        <path d="M69.5015 36.509H67.7592V29.8066H69.5015V36.509Z" fill="#009FE3" />
                        <path d="M73.3862 31.8779H73.3684L72.6486 34.0113H74.0973L73.3862 31.8779ZM72.1685 35.3447L71.7062 36.509H69.8574L72.4351 29.8068H74.3371L76.8618 36.509H75.004L74.5684 35.3447H72.1685Z" fill="#009FE3" />
                        <path d="M78.969 35.0334H81.058V36.509H77.2267V29.8068H78.969V35.0334Z" fill="#009FE3" />
                        <path d="M25.9119 18.6766C26.1543 18.9391 26.4886 19.1616 26.8241 19.2833C27.2083 19.4226 27.5577 19.2269 27.8011 18.9333C28.7165 17.8307 29.6358 16.7307 30.5226 15.6047C31.9664 13.7715 33.3705 11.906 34.8254 10.082C35.2368 9.56622 35.7325 9.10477 36.2515 8.69465C35.2199 7.87721 34.1085 7.15711 32.9323 6.54868C32.9069 6.71919 32.8493 6.89204 32.746 7.0679C32.0528 8.24796 31.4089 9.45904 30.6944 10.625C29.1786 13.0981 27.6272 15.5483 26.1027 18.016C25.9818 18.2117 25.8291 18.5868 25.9119 18.6766Z" fill="#009FE3" />
                        <path d="M31.1967 23.7207C31.5032 23.9817 31.9016 23.9753 32.2146 23.7928C32.5511 23.5968 32.8814 23.3493 33.1255 23.0504C35.3126 20.3743 37.4791 17.6811 39.6544 14.9952C39.8268 14.7823 40.0202 14.5866 40.2044 14.3831C40.4207 14.1439 40.6693 14.0017 40.9384 13.924C40.2784 12.8723 39.5245 11.882 38.6882 10.9666C38.6679 10.9982 38.6487 11.0308 38.6279 11.062C36.7207 13.9413 34.7995 16.811 32.8853 19.6857C32.3282 20.5222 31.7745 21.3612 31.2307 22.2067C31.1259 22.3697 31.0625 22.5644 31.0005 22.752C30.8854 23.0996 30.8959 23.4646 31.1967 23.7207Z" fill="#009FE3" />
                        <path d="M10.816 35.8056C10.66 34.7663 10.5113 33.7255 10.3969 32.683C10.2875 31.685 10.2257 30.6842 10.1754 30.0769C10.291 27.1571 10.4257 24.6352 10.4745 22.1076C10.4963 20.9776 10.3804 19.8337 10.2606 18.6996C10.1801 17.9397 9.97734 17.1873 9.84192 16.4298C9.79827 16.1868 9.82159 15.9339 9.76811 15.6934C9.659 15.2012 9.53214 14.7108 9.38816 14.2258C9.15476 13.4401 8.98126 12.6515 8.98661 11.8602C6.86524 14.8326 5.62142 18.4987 5.61843 22.5186C5.61479 27.6038 7.59689 32.3277 10.8329 35.9239C10.8273 35.8845 10.8219 35.8448 10.816 35.8056Z" fill="#009FE3" />
                        <path d="M13.2442 11.1935C13.9168 12.5302 14.4234 13.9103 14.799 15.3513C15.2109 16.9312 15.7607 18.482 16.2489 20.0459C16.2998 20.2089 16.3657 20.3734 16.3824 20.5392C16.4617 21.3297 16.705 22.0778 17.0282 22.8104C17.1102 22.9958 17.0267 23.0917 16.883 23.2669C16.4262 23.8246 15.7607 24.1325 15.3561 24.7717C14.4236 26.2459 14.6459 27.8198 15.0446 29.3978C15.7519 32.1957 16.5405 34.977 17.2967 37.765C17.4989 38.5101 18.0979 38.9096 18.7354 38.7318C18.9156 38.6815 19.0274 38.5981 18.9703 38.3741C18.6693 37.1938 18.3743 36.0122 18.0795 34.8307C17.7017 33.3162 17.3198 31.8027 16.9561 30.2856C16.8994 30.0488 16.8964 29.7889 16.9302 29.5512C16.9713 29.262 17.1932 29.0865 17.4674 29.0279C17.7355 28.9706 18.0217 28.9961 18.2012 29.2635C18.3202 29.4406 18.4282 29.6402 18.4806 29.8424C18.9866 31.7905 19.4786 33.7415 19.9771 35.6913C20.2073 36.5918 20.4356 37.4929 20.6773 38.391C20.9026 39.2266 21.6526 39.5163 22.337 39.0294C22.414 38.9744 22.4701 38.8077 22.4459 38.711C21.8616 36.3708 21.2641 34.0331 20.6711 31.6946C20.4208 30.7071 20.1692 29.7198 19.9296 28.7301C19.7582 28.0222 20.1752 27.4583 20.823 27.4938C21.1092 27.5094 21.3319 27.6256 21.4336 27.9095C21.5249 28.1645 21.6062 28.4238 21.6751 28.6848C22.2574 30.8915 22.837 33.0991 23.4152 35.3067C23.6617 36.248 23.9015 37.1906 24.1486 38.1317C24.2136 38.3794 24.3546 38.468 24.6034 38.3602C25.4566 37.9905 25.6665 37.391 25.3727 36.4598C25.0424 35.4122 24.7908 34.3436 24.5018 33.2848C24.0647 31.6829 23.624 30.0816 23.1874 28.4794C23.1224 28.2404 23.0622 27.9993 23.0171 27.7569C22.948 27.3858 23.215 26.9607 23.5404 26.9025C23.9935 26.8212 24.3824 27.0698 24.5014 27.5122C25.1674 29.9874 25.8342 32.4622 26.5012 34.9372C26.5278 35.0358 26.5564 35.1345 26.5896 35.2314C26.7582 35.7215 26.9402 35.7936 27.3886 35.5499C27.8747 35.2861 28.097 34.6824 27.9414 34.1217C27.2269 31.5414 26.5186 28.9599 25.8096 26.3786C25.6628 25.8439 25.5822 25.2858 25.3687 24.7771C24.8569 23.5591 24.17 22.4606 22.7967 22.0475C22.3421 21.9108 21.8646 21.8583 21.3955 21.7886C21.2171 21.7623 21.1114 21.7109 21.0562 21.5248C20.783 20.6004 20.4991 19.6788 20.2191 18.7561C20.4719 18.2493 19.9765 17.7363 20.1384 17.2464C20.2993 16.7599 20.4653 16.2507 20.7522 15.8406C21.569 14.6725 22.4519 13.5526 23.3018 12.4082C24.0393 11.4156 24.7722 10.4191 25.4985 9.41786C26.3699 8.21662 27.2429 7.01752 28.3573 6.02507C28.7268 5.69604 29.1174 5.40466 29.5361 5.16698C28.0294 4.71023 26.4518 4.42677 24.8266 4.34334C19.5539 4.07292 14.7766 5.95084 11.3051 9.20842C12.1398 9.67736 12.8035 10.3177 13.2442 11.1935Z" fill="#009FE3" />
                        <path d="M42.251 16.3711C42.1978 16.4521 42.1411 16.5324 42.0812 16.612C40.3012 18.9723 38.5322 21.3408 36.7555 23.7034C35.572 25.2771 34.3823 26.8464 33.1945 28.4168C32.8157 28.9179 32.7941 29.2672 33.125 29.6177C33.5266 30.0427 34.0186 30.1317 34.4835 29.7488C35.0566 29.2764 35.5746 28.7358 36.0983 28.207C37.0319 27.2644 37.9477 26.3038 38.8801 25.3599C39.2855 24.9496 39.8002 24.781 40.3937 24.8174C40.6649 24.8339 40.8774 24.9434 41.0057 25.1924C41.348 25.8554 41.4608 26.527 41.0004 27.1287C40.0024 28.4331 38.9862 29.7233 37.961 31.0059C35.8634 33.6311 33.6622 36.1649 31.2653 38.5195C29.7074 40.0495 28.0625 41.4705 26.253 42.683C36.1749 42.4503 43.9995 34.5811 44.0068 24.4879C44.0089 21.6217 43.3793 18.8707 42.251 16.3711Z" fill="#009FE3" />
                        <path d="M148.331 23.32C148.86 23.4327 149.284 23.697 149.605 24.113C149.926 24.5203 150.086 24.9883 150.086 25.517C150.086 26.2797 149.817 26.8863 149.28 27.337C148.751 27.779 148.01 28 147.057 28H142.806V18.874H146.914C147.841 18.874 148.565 19.0863 149.085 19.511C149.614 19.9357 149.878 20.512 149.878 21.24C149.878 21.7773 149.735 22.2237 149.449 22.579C149.172 22.9343 148.799 23.1813 148.331 23.32ZM145.029 22.566H146.485C146.849 22.566 147.126 22.488 147.317 22.332C147.516 22.1673 147.616 21.929 147.616 21.617C147.616 21.305 147.516 21.0667 147.317 20.902C147.126 20.7373 146.849 20.655 146.485 20.655H145.029V22.566ZM146.667 26.206C147.04 26.206 147.326 26.1237 147.525 25.959C147.733 25.7857 147.837 25.5387 147.837 25.218C147.837 24.8973 147.729 24.646 147.512 24.464C147.304 24.282 147.014 24.191 146.641 24.191H145.029V26.206H146.667ZM157.056 26.388H153.65L153.104 28H150.777L154.079 18.874H156.653L159.955 28H157.602L157.056 26.388ZM156.484 24.672L155.353 21.331L154.235 24.672H156.484ZM160.583 23.424C160.583 22.5227 160.778 21.721 161.168 21.019C161.558 20.3083 162.1 19.758 162.793 19.368C163.495 18.9693 164.288 18.77 165.172 18.77C166.256 18.77 167.183 19.056 167.954 19.628C168.726 20.2 169.241 20.98 169.501 21.968H167.057C166.875 21.5867 166.615 21.2963 166.277 21.097C165.948 20.8977 165.571 20.798 165.146 20.798C164.462 20.798 163.907 21.0363 163.482 21.513C163.058 21.9897 162.845 22.6267 162.845 23.424C162.845 24.2213 163.058 24.8583 163.482 25.335C163.907 25.8117 164.462 26.05 165.146 26.05C165.571 26.05 165.948 25.9503 166.277 25.751C166.615 25.5517 166.875 25.2613 167.057 24.88H169.501C169.241 25.868 168.726 26.648 167.954 27.22C167.183 27.7833 166.256 28.065 165.172 28.065C164.288 28.065 163.495 27.87 162.793 27.48C162.1 27.0813 161.558 26.531 161.168 25.829C160.778 25.127 160.583 24.3253 160.583 23.424ZM176.154 28L173.086 23.97V28H170.863V18.874H173.086V22.878L176.128 18.874H178.741L175.205 23.346L178.871 28H176.154ZM184.243 28.091C183.385 28.091 182.596 27.8917 181.877 27.493C181.166 27.0943 180.599 26.5397 180.174 25.829C179.758 25.1097 179.55 24.3037 179.55 23.411C179.55 22.5183 179.758 21.7167 180.174 21.006C180.599 20.2953 181.166 19.7407 181.877 19.342C182.596 18.9433 183.385 18.744 184.243 18.744C185.101 18.744 185.885 18.9433 186.596 19.342C187.315 19.7407 187.879 20.2953 188.286 21.006C188.702 21.7167 188.91 22.5183 188.91 23.411C188.91 24.3037 188.702 25.1097 188.286 25.829C187.87 26.5397 187.307 27.0943 186.596 27.493C185.885 27.8917 185.101 28.091 184.243 28.091ZM184.243 26.063C184.971 26.063 185.552 25.8203 185.985 25.335C186.427 24.8497 186.648 24.2083 186.648 23.411C186.648 22.605 186.427 21.9637 185.985 21.487C185.552 21.0017 184.971 20.759 184.243 20.759C183.506 20.759 182.917 20.9973 182.475 21.474C182.042 21.9507 181.825 22.5963 181.825 23.411C181.825 24.217 182.042 24.8627 182.475 25.348C182.917 25.8247 183.506 26.063 184.243 26.063ZM196.088 18.874V20.655H192.37V22.579H195.152V24.308H192.37V28H190.147V18.874H196.088ZM203.197 18.874V20.655H199.479V22.579H202.261V24.308H199.479V28H197.256V18.874H203.197ZM206.589 18.874V28H204.366V18.874H206.589ZM207.823 23.424C207.823 22.5227 208.018 21.721 208.408 21.019C208.798 20.3083 209.339 19.758 210.033 19.368C210.735 18.9693 211.528 18.77 212.412 18.77C213.495 18.77 214.422 19.056 215.194 19.628C215.965 20.2 216.481 20.98 216.741 21.968H214.297C214.115 21.5867 213.855 21.2963 213.517 21.097C213.187 20.8977 212.81 20.798 212.386 20.798C211.701 20.798 211.146 21.0363 210.722 21.513C210.297 21.9897 210.085 22.6267 210.085 23.424C210.085 24.2213 210.297 24.8583 210.722 25.335C211.146 25.8117 211.701 26.05 212.386 26.05C212.81 26.05 213.187 25.9503 213.517 25.751C213.855 25.5517 214.115 25.2613 214.297 24.88H216.741C216.481 25.868 215.965 26.648 215.194 27.22C214.422 27.7833 213.495 28.065 212.412 28.065C211.528 28.065 210.735 27.87 210.033 27.48C209.339 27.0813 208.798 26.531 208.408 25.829C208.018 25.127 207.823 24.3253 207.823 23.424ZM220.325 20.655V22.501H223.302V24.217H220.325V26.219H223.692V28H218.102V18.874H223.692V20.655H220.325Z" fill="#009FE3" />
                        <rect x="131" y="11" width="1" height="24" rx="0.5" fill="#009FE3" />
                    </svg>
                </div>
                <nav className="layout-nav">
                    {updatedMenus.map((menu) => (
                        !menu.hidden && ( // Solo mostrar si no está oculto
                            <div key={menu.key}>
                                <div
                                    className={`layout-menu-item ${isActive(menu.path) ? 'active' : ''}`}
                                    onClick={() => {
                                        menu.subMenus
                                            ? toggleSubMenu(menu.key)
                                            : handleNavigate(menu.path);
                                    }}
                                >
                                    {menu.icon}
                                    {menu.label}
                                </div>
                                {menu.subMenus && openSubMenu === menu.key && (
                                    <div className="layout-sub-menu">
                                        {menu.subMenus.map((subMenu) => (
                                            !subMenu.hidden && ( // Solo mostrar si no está oculto
                                                <div
                                                    key={subMenu.key}
                                                    className={`layout-sub-menu-item ${isActive(subMenu.path) ? 'active' : ''}`}
                                                    onClick={() => handleNavigate(subMenu.path)}
                                                >
                                                    {subMenu.icon}
                                                    {subMenu.label}
                                                </div>
                                            )
                                        ))}
                                    </div>
                                )}
                            </div>
                        )
                    ))}
                </nav>
            </aside>

            {/* Main Content */}
            <div className="layout-main">
                {/* label={getNameMenu(currentPath)} */}
                <ToolbarComponent extraElements={
                    <header className="layout-navbar">
                        <div></div>
                        <div className="items-nav">
                            {navbarMenus.map((menu) => (
                                <div
                                    key={menu.key}
                                    className={`layout-navbar-item ${isActive(menu.path) ? 'active' : ''}`}
                                    onClick={() => handleNavigate(menu.path)}
                                >
                                    {menu.label}
                                </div>
                            ))}
                            <AvatarDropdown name="Luis Vilches" menuItems={menuItems} />
                        </div>
                    </header>
                }>
                    <main className="layout-content">
                        {children}
                    </main>
                </ToolbarComponent>
            </div>
        </div>
    );
};

export default Layout;